//Next permutation

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;

class Solution {
    void nextPermutation(int[] arr) {
        int ind = -1;
        int n = arr.length - 1;
        int l = 0;

        for(int i = arr.length - 2; i >= 0; i--) {
            if(arr[i] < arr[i + 1]) {
                ind = i;
                break;
            }
        }

        if(ind == -1) {
            while(l < n) {
                int temp = arr[l];
                arr[l] = arr[n];
                arr[n] = temp;

                l++;
                n--;
            }
        }
        else {
            int t = ind + 1;

            for(int i = arr.length - 1; i > ind; i--) {
                if(arr[i] > arr[ind]) {
                    int temp = arr[i];
                    arr[i] = arr[ind];
                    arr[ind] = temp;
                    break;
                }
            }

            while(t < n) {
                int temp = arr[t];
                arr[t] = arr[n];
                arr[n] = temp;

                t++;
                n--;
            }
        }
    }
}

public class Main {

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int tc = Integer.parseInt(br.readLine());

        while(tc-- > 0) {
            String[] inputLine = br.readLine().split(" ");
            int[] arr = new int[inputLine.length];

            for(int i = 0; i < inputLine.length; i++) {
                arr[i] = Integer.parseInt(inputLine[i]);
            }

            int N = arr.length;
            Solution ob = new Solution();
            ob.nextPermutation(arr);
            StringBuilder out = new StringBuilder();

            for(int i = 0; i < N; i++) {
                out.append(arr[i] + " ");
            }

            System.out.println(out.toString().trim());
            System.out.println("~");
        }
    }
}
