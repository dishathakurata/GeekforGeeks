//String rotations of each other

import java.io.*;
import java.lang.*;
import java.util.*;

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine());

        while(t-- > 0) {
            String s1 = br.readLine();
            String s2 = br.readLine();
            Solution obj = new Solution();

            if(obj.areRotations(s1, s2)) {
                System.out.println("true");
            }
            else {
                System.out.println("false");
            }
        }
    }
}

class Solution {
    public static boolean areRotations(String s1, String s2) {
        String txt = s1 + s1;
        String pat = s2;
        int n = txt.length();
        int m = pat.length();
        int[] lps = computeLPSArray(pat);
        int i = 0, j = 0; 
        
        while(i < n) {
            if(pat.charAt(j) == txt.charAt(i)) {
                j++;
                i++;
            }

            if(j == m) {
                return true;
            }
            else if(i < n && pat.charAt(j) != txt.charAt(i)) {
                if(j != 0) {
                    j = lps[j - 1];
                }
                else {
                    i++;
                }
            }
        }
        
        return false;
    }
    
    static int[] computeLPSArray(String pat) {
        int n = pat.length();
        int[] lps = new int[n];
        int len = 0;
        lps[0] = 0;
        int i = 1;
        
        while(i < n) {
            if(pat.charAt(i) == pat.charAt(len)) {
                len++;
                lps[i] = len;
                i++;
            }
            else {
                if(len != 0) {
                    len = lps[len - 1];
                }
                else {
                    lps[i] = 0;
                    i++;
                }
            }
        }
        
        return lps;
    }
}
