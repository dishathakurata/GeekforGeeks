//Search in rotated sorted array

import java.io.*;
import java.util.*;

public class GFG {
    public static void main(String args[]) throws IOException {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out = new PrintWriter(System.out);
        int t = Integer.parseInt(in.readLine().trim());

        while(t-- > 0) {
            String line = in.readLine();
            String[] tokens = line.split(" ");
            ArrayList<Integer> array = new ArrayList<>();

            for(String token : tokens) {
                array.add(Integer.parseInt(token));
            }

            int[] arr = new int[array.size()];
            int idx = 0;

            for(int i : array) {
                arr[idx++] = i;
            }

            int key = Integer.parseInt(in.readLine().trim());
            out.println(new Solution().search(arr, key));
            out.println("~");
        }
        out.close();
    }
}

class Solution {
    int search(int[] arr, int key) {
        int lo = 0, hi = arr.length - 1;

        while(lo <= hi) {
            int mid = lo + (hi - lo) / 2;

            if(arr[mid] == key) {
                return mid;
            }

            if(arr[mid] >= arr[lo]) {
                if(key >= arr[lo] && key < arr[mid]) {
                    hi = mid - 1;
                }
                else {
                    lo = mid + 1;
                }
            }
            else {
                if(key > arr[mid] && key <= arr[hi]) {
                    lo = mid + 1;
                }
                else {
                    hi = mid - 1;
                }
            }
        }
      
        return -1;
    }
}
