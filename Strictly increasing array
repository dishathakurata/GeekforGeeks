//Strictly increasing array

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());

        while(T-->0) {
            int n = Integer.parseInt(br.readLine().trim());
            String s = br.readLine().trim();
            String[] s1 = s.split(" ");
            int[] nums = new int[n];

            for(int i = 0; i < n; i++)
                nums[i] = Integer.parseInt(s1[i]);

            Solution ob = new Solution();
            long ans = ob.min_operations(nums);
            System.out.println(ans);            
        }
    }
}

class Solution {
    public int min_operations(int []nums) {
        int n = nums.length;
        int lis[] = new int[n];
        lis[0] = 1;
        int res = lis[0];
        
        for(int i = 1; i < n ; i++) {
            lis[i] = 1;
            
            for(int j = 0; j < i; j++) {
                if(nums[j] < nums[i] && (nums[i] - nums[j]) > (i - j - 1)) {
                    lis[i] = Math.max(lis[i], lis[j] + 1);
                }
            }
            
            res = Math.max(res, lis[i]);
        }

        return n - res;
    }
}
