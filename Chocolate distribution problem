//Chocolate distribution problem

import java.io.*;
import java.util.*;

class GfG {
    public static void main (String[] args) {
        
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        
        while(t-- > 0) {
            int n = sc.nextInt();
            ArrayList<Integer> arr = new ArrayList<>();

            for(int i = 0; i < n; i++) {
                    int x = sc.nextInt();
                    arr.add(x);
            }

            int m = sc.nextInt();            
            Solution ob = new Solution();
        		System.out.println(ob.findMinDiff(arr,n,m));
        }    
    }
}

class Solution {
    public long findMinDiff (ArrayList<Integer> a, int n, int m) {
        Collections.sort(a);
        int left = 0, right = m - 1;
        long diff = Long.MAX_VALUE;
        
        while(right < n) {
            diff = Math.min(a.get(right) - a.get(left), diff);
            
            left++;
            right++;
        }
        
        return diff;
    }
}
