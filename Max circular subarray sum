//Max circular subarray sum

import java.io.*;
import java.util.*;

class Sorting {
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine());

        for(int g = 0; g < t; g++) {
            String[] str = (br.readLine()).trim().split(" ");
            int arr[] = new int[str.length];

            for(int i = 0; i < str.length; i++) {
                arr[i] = Integer.parseInt(str[i]);
            }

            System.out.println(new Solution().circularSubarraySum(arr));
        }
    }
}

class Solution {
    public int circularSubarraySum(int arr[]) {
        int min = Integer.MIN_VALUE;
        int max = Integer.MIN_VALUE;
        int curr = 0;
        
        for(int i = 0; i < arr.length; i++) {
            curr += arr[i];
            
            if(curr > max) {
                max = curr;
            }
            
            if(curr < 0) {
                curr = 0;
            }
        }
        
        int totalSum = 0;
        
        for(int i = 0; i < arr.length; i++) {
            totalSum += arr[i];
        }
        
        curr = 0;
        
        for(int i = 0; i < arr.length; i++) {
            curr -= arr[i];
            
            if(curr > min) {
                min = curr;
            }
            
            if(curr < 0) {
                curr = 0;
            }
        }
        
        min += totalSum;
        
        return Math.max(max, min);
    }
}
