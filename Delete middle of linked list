//Delete middle of linked list

import java.util.*;
import java.io.*;

class Node{
    int data;
    Node next;
    
    Node(int x){
        data = x;
        next = null;
    }  
}

class GFG {
	static void printList(Node node) { 
		while (node != null) { 
			System.out.print(node.data + " "); 
			node = node.next; 
		} 
		System.out.println(); 
	}

    public static void main(String args[]) throws IOException { 
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();

        while(t > 0) {
        	  int n = sc.nextInt();
            Node head = new Node(sc.nextInt());
            Node tail = head;

            for(int i=0; i<n-1; i++) {
                tail.next = new Node(sc.nextInt());
                tail = tail.next;
            }

            Solution g = new Solution();
            head = g.deleteMid(head);
            printList(head); 
            t--;
        }
    } 
} 

class Node {
    int data;
    Node next;
    Node(int d)  { data = d;  next = null; }
}

class Solution {
    Node deleteMid(Node head) {
        if(head == null || head.next == null) {
            return null;
        }
        
        Node slowp = head; 
        Node fastp = head; 
        Node delp = null; 
 
        while(fastp != null && fastp.next != null) { 
            fastp = fastp.next.next; 
            delp = slowp; 
            slowp = slowp.next; 
        }

        delp.next = slowp.next; 
  
        return head; 
    }
}
